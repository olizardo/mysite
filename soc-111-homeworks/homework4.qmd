---
title: "Homework IV: Indirect Connections and Matrices"
---

```{r setup, include=FALSE}
    knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
    require(ggraph)
    require(kableExtra)
    require(tidygraph)
    require(igraph)
```

## Indirect Connections

Consider the graph shown in @fig-grex1:

```{r}
#| label: fig-grex1
#| fig-cap: "An undirected graph."
#| fig-cap-location: margin   
#| fig-height: 12
#| fig-width: 12

    set.seed(537)
    w <- 0
    while (w == 0) {
      d <- sample(3:9, 9, replace = TRUE)
      w <- as.numeric(is.graphical.degree.sequence(d))
      }    
    gr <- play_degree(d, method = "simple")
    gr <- mutate(gr, name = toupper(letters[1:length(d)]))
    p <- ggraph(gr, layout = 'auto') 
    p <- p + geom_edge_link(color = "steelblue", width = 1.25) 
    p <- p + geom_node_point(aes(x = x, y = y), size = 22, color = "tan2") 
    p <- p + geom_node_text(aes(label = name), size = 10, color = "white")
    p <- p + theme_graph() 
    p
```

1. Write down *all* the **paths** of length four ($l = 4$) connecting node *G* and node *F*:
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

1. Write down *all* the **paths** of length two ($l = 2$) featuring node *B* as the **inner node**:
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

1. Write down all the **shortest paths** connecting nodes *G* and *I*:
<br>
<br>
<br>
<br>
<br>
<br>


1. Write down one **cycle** of length six that starts and ends with node *C*:
<br>
<br>
<br>
<br>
<br>
<br>

## Directed Paths

Consider the graph shown in @fig-grex2:

```{r}
#| label: fig-grex2
#| fig-cap: "A directed graph."
#| fig-cap-location: margin   
#| fig-height: 12
#| fig-width: 12

    set.seed(321)
    fr <- sample(toupper(letters[1:9]), 24, replace = TRUE)
    to <- sample(toupper(letters[1:9]), 24, replace = TRUE)
    el <- matrix(c(fr, to), nc = 2, byrow = TRUE)
    gr <- as_tbl_graph(simplify(graph_from_edgelist(el)))
    p <- ggraph(gr, layout = 'auto') 
    p <- p + geom_edge_parallel(color = "steelblue", edge_width = 1.25,
                            arrow = arrow(length = unit(7, 'mm')),
                            end_cap = circle(10, 'mm'), 
                            sep = unit(8, 'mm'))
    p <- p + geom_node_point(aes(x = x, y = y), size = 22, color = "tan2") 
    p <- p + geom_node_text(aes(label = name), size = 10, color = "white")
    p <- p + theme_graph() 
    p
```

1. Write down *all* the **directed path(s)** of length four ($l = 4$) going *from* node *G* *to* node *B*:
<br>
<br>
<br>
<br>
<br>
<br>

1. What is the length of the **shortest directed path(s)** connecting going *from* node *A* *to* node *C*?
<br>
<br>
<br>

1. If *B* wanted to send a message to *H* in the most efficient way, how many intermediaries would *B* have to use?
<br>
<br>
<br>

1. Write down a directed **cycle** of length five ($l = 5$) starts and ends with node *D*:
<br>
<br>
<br>
<br>
<br>
<br>

## Matrices

- In the matrix below, write down the cell entries for the **adjacency matrix** corresponding to the graph shown in @fig-grex2:

```{r}
    a <- matrix(" ", nrow = 9, ncol = 9)
    rownames(a) <- toupper(letters[1:9])
    colnames(a) <- toupper(letters[1:9])
    diag(a) <- "----"
    kbl(a, format = "html", align = "c")  %>% 
         column_spec(1, bold = TRUE) %>% 
         column_spec (2:10, border_left = T, border_right = T) %>%
         row_spec(1:9, extra_css = "border-bottom: 1px solid") %>%
         kable_styling()
```

- In the matrix below, write down the cell entries for the **reachability matrix** corresponding to the graph shown in @fig-grex2:

```{r}
    diag(a) <- "----"
    kbl(a, format = "html", align = "c")  %>% 
         column_spec(1, bold = TRUE) %>% 
         column_spec (2:10, border_left = T, border_right = T) %>%
         row_spec(1:9, extra_css = "border-bottom: 1px solid") %>%
         kable_styling()
```

- In the matrix below, write down the cell entries **geodesic distance matrix** corresponding to the graph shown in @fig-grex1:

```{r}
    diag(a) <- "----"
    kbl(a, format = "html", align = "c")  %>% 
         column_spec(1, bold = TRUE) %>% 
         column_spec (2:10, border_left = T, border_right = T) %>%
         row_spec(1:9, extra_css = "border-bottom: 1px solid") %>%
         kable_styling()
```

- What is the **diameter** of the graph shown in @fig-grex1?
<br>
<br>
<br>


